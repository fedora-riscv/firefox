diff -up firefox-68.0/gfx/skia/skia/include/private/SkHalf.h.old firefox-68.0/gfx/skia/skia/include/private/SkHalf.h
--- firefox-68.0/gfx/skia/skia/include/private/SkHalf.h.old	2019-07-11 12:33:40.471936951 +0200
+++ firefox-68.0/gfx/skia/skia/include/private/SkHalf.h	2019-07-11 12:33:50.527913736 +0200
@@ -40,7 +40,7 @@ static inline Sk4h SkFloatToHalf_finite_
 
 static inline Sk4f SkHalfToFloat_finite_ftz(uint64_t rgba) {
     Sk4h hs = Sk4h::Load(&rgba);
-#if !defined(SKNX_NO_SIMD) && defined(SK_CPU_ARM64)
+#if 0 // !defined(SKNX_NO_SIMD) && defined(SK_CPU_ARM64)
     float32x4_t fs;
     asm ("fcvtl %[fs].4s, %[hs].4h   \n"   // vcvt_f32_f16(...)
         : [fs] "=w" (fs)                   // =w: write-only NEON register
@@ -62,7 +62,7 @@ static inline Sk4f SkHalfToFloat_finite_
 }
 
 static inline Sk4h SkFloatToHalf_finite_ftz(const Sk4f& fs) {
-#if !defined(SKNX_NO_SIMD) && defined(SK_CPU_ARM64)
+#if 0 // !defined(SKNX_NO_SIMD) && defined(SK_CPU_ARM64)
     float32x4_t vec = fs.fVec;
     asm ("fcvtn %[vec].4h, %[vec].4s  \n"   // vcvt_f16_f32(vec)
         : [vec] "+w" (vec));                // +w: read-write NEON register

diff -up firefox-68.0/gfx/skia/skia/src/opts/SkRasterPipeline_opts.h.old firefox-68.0/gfx/skia/skia/src/opts/SkRasterPipeline_opts.h
--- firefox-68.0/gfx/skia/skia/src/opts/SkRasterPipeline_opts.h.old	2019-07-11 12:39:08.694166900 +0200
+++ firefox-68.0/gfx/skia/skia/src/opts/SkRasterPipeline_opts.h	2019-07-11 12:39:21.572136328 +0200
@@ -830,7 +830,7 @@ SI F from_half(U16 h) {
 }
 
 SI U16 to_half(F f) {
-#if defined(JUMPER_IS_NEON) && defined(SK_CPU_ARM64) && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
+#if 0 // defined(JUMPER_IS_NEON) && defined(SK_CPU_ARM64) && !defined(SK_BUILD_FOR_GOOGLE3)  // Temporary workaround for some Google3 builds.
     return vcvt_f16_f32(f);
 
 #elif defined(JUMPER_IS_HSW) || defined(JUMPER_IS_AVX512)
diff -up firefox-68.0/gfx/skia/skia/third_party/skcms/src/Transform_inl.h.old firefox-68.0/gfx/skia/skia/third_party/skcms/src/Transform_inl.h
--- firefox-68.0/gfx/skia/skia/third_party/skcms/src/Transform_inl.h.old	2019-07-11 12:38:45.285222428 +0200
+++ firefox-68.0/gfx/skia/skia/third_party/skcms/src/Transform_inl.h	2019-07-11 12:38:57.414193679 +0200
@@ -163,7 +163,7 @@ SI F F_from_Half(U16 half) {
     __attribute__((no_sanitize("unsigned-integer-overflow")))
 #endif
 SI U16 Half_from_F(F f) {
-#if defined(USING_NEON_F16C)
+#if 0 // defined(USING_NEON_F16C)
     return (U16)vcvt_f16_f32(f);
 #elif defined(__AVX512F__)
     return (U16)_mm512_cvtps_ph((__m512 )f, _MM_FROUND_CUR_DIRECTION );
